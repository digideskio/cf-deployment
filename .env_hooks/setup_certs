#!/bin/bash

set -e

function upload_to_vault {
	path=$1
	shift
	file=$1
	shift

	safe import >/dev/null <<EOF
{"${VAULT_PREFIX}/certs/${path}":{"key":"$(cat ${depot_path}/${file}.key | perl -pe 's/\n/\\n/am')","cert":"$(cat ${depot_path}/${file}.crt | perl -pe 's/\n/\\n/am')"}}
EOF
}

function gen_cert {
  name=$1
  shift
  certstrap --depot-path ${depot_path} request-cert --passphrase '' --common-name "${name}" --domain "${name},*.${name}" > /dev/null
  certstrap --depot-path ${depot_path} sign "${name}" --CA ${CA} > /dev/null
}

if [[ -z $(which certstrap) ]]; then
	echo "Retrieving certstrap utility"
	go get -v github.com/square/certstrap >/dev/null
fi

CA=cf-ca
depot_path="/tmp/cf_certs" #FIXME - use temp directory

mkdir -p ${depot_path}
trap "rm -rf ${depot_path}" QUIT TERM INT EXIT

echo "Generating Cloud Foundry internal certs"
certstrap --depot-path ${depot_path} init --passphrase '' --common-name ${CA} >/dev/null

gen_cert consul_agent
gen_cert server.dc1.cf.internal
gen_cert dea_client
gen_cert dea.service.cf.internal
gen_cert clientName #etcd client
gen_cert etcd.service.consul
gen_cert hm9000_client
gen_cert listener-hm9000.service.cf.internal
gen_cert blobstore.service.cf.internal
gen_cert uaa.service.cf.internal

echo "Uploading Cloud Foundry internal certs to Vault"
upload_to_vault internal_ca cf-ca

upload_to_vault consul_client consul_agent
upload_to_vault consul_server server.dc1.cf.internal

upload_to_vault dea_client dea_client
upload_to_vault dea_server dea.service.cf.internal

upload_to_vault etcd_client clientName
upload_to_vault etcd_server etcd.service.consul

upload_to_vault hm9000_client hm9000_client
upload_to_vault hm9000_server listener-hm9000.service.cf.internal

upload_to_vault blobstore blobstore.service.cf.internal

upload_to_vault uaa uaa.service.cf.internal
